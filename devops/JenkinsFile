pipeline {
    agent { label 'master' }
    stages {
        stage('Checkout development branch of DWH repository to Jenkins Machine') {
            steps 
            {
                git branch: 'feature/s1', credentialsId: 'github-olcayozz', url: 'https://github.com/olcayozz/bugglesLab.git'
                script {
                    env.commitChangeset = sh(returnStdout: true, script: 'git diff-tree --no-commit-id --name-status -r HEAD').trim()
                }
            }			
        }
        stage('ChangeSet Parsing')
        {
            steps {
                script {
                    def pattern = ~/(db_sources|odi|sch)\/(.*)\/(.*)\.(.*)/
                    def changes = []
                    for (item in env.commitChangeset.split( '\n' )) {
                        def objs = item =~ pattern
                        changes << objs[0]
                    }
                    env.ParsedChangeSet=changes
                    println env.ParsedChangeSet
                }
            }
        }
        stage('Connect ODI') {
            steps {
                script {
                    def workspace = env.WORKSPACE
                    echo "$workspace"
                    println "ODI bağlantısını deniyoruz."
                }
            }
        }
        stage('SQL Deployments') {
            steps {
                script {
                    def pattern = ~/(db_sources|odi|sch)\/(.*)\/(.*)\.(.*)/
                    def changes = []
                    for (item in env.commitChangeset.split( '\n' )) {
                        def objs = item =~ pattern
                    
                        switch (objs[0][1]) {
                            case "db_sources": 
                                
                                println "sql deployment : " + objs[0][0]; 
                            
                            break;
                            case "odi": 
                                
                                println "odi : " + objs[0][0]; 
                                
                                
                                
                                break;
                            case "sch": println "sch : " + objs[0][0]; break;
                            default: println "Something else !!!!....  " + objs[0][0];
                        }
                    }
                }
            }
        }
        stage('Dump ENV') {
            steps {
                sh "printenv"
            }
        }
    }
}